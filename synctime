const user = {
  lastActivityTime: null,
};

function createPost(post) {
  return new Promise((resolve, reject) => {
    // Simulating post creation with a 2-second delay
    setTimeout(() => {
      console.log(`Post Created: ${post}`);
      resolve();
    }, 2000);
  });
}

function updateLastUserActivityTime() {
  return new Promise((resolve, reject) => {
    // Simulating user activity update with a 1-second delay
    setTimeout(() => {
      user.lastActivityTime = new Date();
      console.log(`Last Activity Time Updated: ${user.lastActivityTime}`);
      resolve(user.lastActivityTime);
    }, 1000);
  });
}

function deletePost() {
  return new Promise((resolve, reject) => {
    // Simulating post deletion with a 1-second delay
    setTimeout(() => {
      const deletedPost = posts.pop();
      console.log(`Post Deleted: ${deletedPost}`);
      resolve();
    }, 1000);
  });
}

// Example Usage
const posts = [];

createPost("Post One")
  .then(() => updateLastUserActivityTime())
  .then((updatedLastActivityTime) => {
    console.log(`User's Last Activity Time: ${updatedLastActivityTime}`);
    return createPost("Post Two");
  })
  .then(() => updateLastUserActivityTime())
  .then((updatedLastActivityTime) => {
    console.log(`User's Last Activity Time: ${updatedLastActivityTime}`);
    return createPost("Post Three");
  })
  .then(() => updateLastUserActivityTime())
  .then((updatedLastActivityTime) => {
    console.log(`User's Last Activity Time: ${updatedLastActivityTime}`);
    return deletePost();
  })
  .then(() => {
    console.log("Remaining Posts after Deletion:");
    console.log(posts);
  })
  .catch((error) => console.error(`Error: ${error}`));
